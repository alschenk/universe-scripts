name: Mirror to public
on:
  push:
    branches: [ "main" ]     # add more if needed

jobs:
  mirror:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Configure SSH (decode base64 deploy key)
        env:
          DEPLOY_KEY_B64: ${{ secrets.PUBLIC_REPO_DEPLOY_KEY_B64 }}
        run: |
          set -euo pipefail
          install -m 700 -d ~/.ssh

          # Decode the key; base64 guarantees clean LF newlines
          echo "$DEPLOY_KEY_B64" | base64 -d > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key

          # Quick, safe sanity checks (no secrets leaked)
          echo "Key file type (should say: OpenSSH private key):"
          file ~/.ssh/deploy_key || true
          echo "Key size (bytes):"
          wc -c ~/.ssh/deploy_key || true

          # Validate and show the public fingerprint weâ€™ll present to GitHub
          ssh-keygen -y -f ~/.ssh/deploy_key > ~/.ssh/deploy_key.pub
          echo "Public key fingerprint on runner:"
          ssh-keygen -lf ~/.ssh/deploy_key.pub

          # Force SSH to use only this key
          cat >> ~/.ssh/config <<'EOF'
          Host github.com
            User git
            HostName github.com
            IdentityFile ~/.ssh/deploy_key
            IdentitiesOnly yes
            StrictHostKeyChecking yes
          EOF

          # Trust GitHub host key
          ssh-keyscan -t ed25519 github.com >> ~/.ssh/known_hosts

          # Optional connectivity probe (non-fatal)
          ssh -T git@github.com || true

      - name: Push to public (mirror branches + tags)
        env:
          GIT_SSH_COMMAND: ssh -i ~/.ssh/deploy_key -o IdentitiesOnly=yes -o UserKnownHostsFile=~/.ssh/known_hosts
        run: |
          git remote add public git@github.com:alschenk/universe-scripts.git
          git push --force public +refs/heads/*:refs/heads/*
          git push --force --tags public

