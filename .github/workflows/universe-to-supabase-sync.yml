name: universe-to-supabase

on:
  schedule:
    # Runs daily at 5,9,13,17,21 UTC (adjust to taste; schedules are UTC)
    - cron: "0 5,9,13,17,21 * * *"
  workflow_dispatch:
    inputs:
      limit:
        description: "Page size (1..50)"
        required: false
        default: "10"
      backfill_days:
        description: "Backfill window in days"
        required: false
        default: "7"
      include_closed:
        description: "Include closed events"
        required: false
        type: boolean
        default: false

permissions:
  contents: read

# Avoid overlapping runs if a previous one is still going
concurrency:
  group: universe-sync
  cancel-in-progress: true

jobs:
  sync:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      # Credentials
      UNIVERSE_CLIENT_ID: ${{ secrets.UNIVERSE_CLIENT_ID }}
      UNIVERSE_CLIENT_SECRET: ${{ secrets.UNIVERSE_CLIENT_SECRET }}
      UNIVERSE_REFRESH_TOKEN: ${{ secrets.UNIVERSE_REFRESH_TOKEN }}
      SUPABASE_POOLER_DSN: ${{ secrets.SUPABASE_POOLER_DSN }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install requests psycopg2-binary
          fi

      - name: DB connectivity check (IPv4 pooler)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y postgresql-client
          # Fail fast if unreachable / bad SSL / bad creds
          psql "$SUPABASE_POOLER_DSN" -v ON_ERROR_STOP=1 -c 'select now();'

      - name: Run loader
        env:
          # Your script reads these env vars
          UNIVERSESCRIPT_POSTGRES_DSN: ${{ secrets.SUPABASE_POOLER_DSN }}
          # Defaults (used if not provided via workflow_dispatch)
          UNIVERSESCRIPT_PAGE_LIMIT: ${{ secrets.UNIVERSESCRIPT_PAGE_LIMIT }}
          UNIVERSESCRIPT_BACKFILL_DAYS: ${{ secrets.UNIVERSESCRIPT_BACKFILL_DAYS }}
        run: |
          set -euo pipefail
          # Resolve inputs with sensible defaults for both schedule & manual runs
          LIMIT="${{ github.event.inputs.limit }}"
          LIMIT="${LIMIT:-${UNIVERSESCRIPT_PAGE_LIMIT:-50}}"
          BACKFILL="${{ github.event.inputs.backfill_days }}"
          BACKFILL="${BACKFILL:-${UNIVERSESCRIPT_BACKFILL_DAYS:-7}}"
          INC="${{ github.event.inputs.include_closed }}"
          [ "${INC:-false}" = "true" ] && INC_FLAG="--include-closed" || INC_FLAG=""

          echo "Using: limit=$LIMIT backfill_days=$BACKFILL include_closed=$INC_FLAG"
          # absolute path avoids cwd issues
          python universe_orders_to_postgres.py \
            --limit "$LIMIT" \
            --backfill-days "$BACKFILL" \
            $INC_FLAG | tee run.log

      - name: Upload run log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: universe-sync-log
          path: run.log
          retention-days: 7
